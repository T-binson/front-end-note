1.Gulp
	Gulp是基于Nodejs开发的一个构建工具，借助gulp插件可以实现不同的构建任务，以其简洁的配置和卓越的性能成为目前主流的构建工具。
	全局安装 npm install -g gulp

2.Gulp基础
	1)本地安装
		 命令行进入项目所在根目录，输入npm install gulp --save-dev
	2)任务清单
		在项目根目录下创建gulpfile.js(这是一个配置文件)
			let gulp = require('gulp');	//引入gulp
			gulp.task('default',function () {
				//定义任务
			});
	3)定义任务
		在gulpfile.js定义构建任务，如压缩、合并，Gulp自身并不执行任何任务，是通过调用具体插件来完成的。
		以编译LESS为例，安装npm install gulp-less
			let gulp = require('gulp'),
					less = require('less');

			gulp.task('less',function() {
				return gulp.src('./public/less/*.less')
						.pipe(less())
						.pipe(gulp.dest('./public/css'));
			});
	4)执行任务
		命令行输入gulp less

3.Gulp工作原理
	通过不同的插件实现构建任务，Gulp只是按着配置文件调用执行了这些插件。
	1)Gulp API
		引入gulp包（模块）后返回一个对象，习惯赋值给变量gulp，通过该对象提供的方法（API）完成任务的配置。
			a.gulp.task('任务名称',callback)
				gulp.task('less',() => {});
				不同任务间存在依赖关系时，可以指定依赖
				gulp.task('less',['依赖1','依赖2','依赖3'],() => {});

			b.gulp.src('需要编译的文件路径'),参数可以是字符串或数组（可以正则方式书写）

			c.gulp.pipe(),将需要构建的资源“输送”给插件

			d.gulp.desk(),构建任务完成后资源存放的路径（会自动创建）

			e.gulp.watch()

				eg:
					let gulp = require('gulp'),
					less = require('less');

					gulp.task('less',function() {
						return gulp.src('./public/less/*.less')
								.pipe(less())
								.pipe(gulp.dest('./public/css'));
					});
	
	2)常用插件
		gulp-less 编译LESS文件
		gulp-autoprefixer 添加CSS私有前缀
		gulp-cssmin 压缩CSS
		gulp-rname重命名
		gulp-imagemin 图片压缩
		gulp-uglify 压缩Javascript
		gulp-concat 合并
		gulp-htmlmin 压缩HTML
		gulp-rev 添加版本号
		gulp-rev-collector 内容替换
		gulp-useref
		gulp-if
